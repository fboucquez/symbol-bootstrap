version: '3'
services:
    db-0:
        user: '1000:1000'
        environment:
            MONGO_INITDB_DATABASE: catapult
        container_name: db-0
        image: 'mongo:4.2.6-bionic'
        command: mongod --dbpath=/dbdata --bind_ip=db-0
        stop_signal: SIGINT
        working_dir: /docker-entrypoint-initdb.d
        ports:
            - '27017:27017'
        volumes:
            - './mongo:/docker-entrypoint-initdb.d:ro'
            - '../databases/db-0:/dbdata:rw'
    peer-node-0:
        user: '1000:1000'
        container_name: peer-node-0
        image: 'symbolplatform/symbol-server:gcc-0.10.0.4'
        command: bash -c "/bin/bash /symbol-commands/runServerRecover.sh peer-node-0 && /bin/bash /symbol-commands/startServer.sh peer-node-0"
        stop_signal: SIGINT
        working_dir: /symbol-workdir
        restart: 'on-failure:2'
        ports:
            - '7900:7900'
        volumes:
            - '../nodes/peer-node-0:/symbol-workdir:rw'
            - './server:/symbol-commands:ro'
        depends_on: []
        networks:
            default:
                aliases:
                    - peer-node-0
        hostname: peer-node-0
    peer-node-1:
        user: '1000:1000'
        container_name: peer-node-1
        image: 'symbolplatform/symbol-server:gcc-0.10.0.4'
        command: bash -c "/bin/bash /symbol-commands/runServerRecover.sh peer-node-1 && /bin/bash /symbol-commands/startServer.sh peer-node-1"
        stop_signal: SIGINT
        working_dir: /symbol-workdir
        restart: 'on-failure:2'
        ports:
            - '7901:7900'
        volumes:
            - '../nodes/peer-node-1:/symbol-workdir:rw'
            - './server:/symbol-commands:ro'
        depends_on: []
        networks:
            default:
                aliases:
                    - peer-node-1
        hostname: peer-node-1
    api-node-0:
        user: '1000:1000'
        container_name: api-node-0
        image: 'symbolplatform/symbol-server:gcc-0.10.0.4'
        command: bash -c "/bin/bash /symbol-commands/wait.sh ./data/broker.started && /bin/bash /symbol-commands/startServer.sh api-node-0"
        stop_signal: SIGINT
        working_dir: /symbol-workdir
        restart: 'on-failure:2'
        ports: []
        volumes:
            - '../nodes/api-node-0:/symbol-workdir:rw'
            - './server:/symbol-commands:ro'
        depends_on:
            - api-node-broker-0
        networks:
            default:
                aliases:
                    - api-node-0
        hostname: api-node-0
    api-node-broker-0:
        user: '1000:1000'
        container_name: api-node-broker-0
        image: 'symbolplatform/symbol-server:gcc-0.10.0.4'
        working_dir: /symbol-workdir
        command: >-
            bash -c "/bin/bash /symbol-commands/runServerRecover.sh api-node-broker-0 && /bin/bash /symbol-commands/startBroker.sh
            api-node-broker-0"
        ports:
            - '8002:7902'
        stop_signal: SIGINT
        restart: 'on-failure:2'
        volumes:
            - '../nodes/api-node-0:/symbol-workdir:rw'
            - './server:/symbol-commands:ro'
    rest-gateway-0:
        container_name: rest-gateway-0
        user: '1000:1000'
        image: 'symbolplatform/symbol-rest:2.2.1'
        command: npm start --prefix /app/catapult-rest/rest /symbol-workdir/rest.json
        stop_signal: SIGINT
        working_dir: /symbol-workdir
        ports:
            - '3000:3000'
        volumes:
            - '../gateways/rest-gateway-0:/symbol-workdir:rw'
        depends_on:
            - db-0
        networks:
            default:
                ipv4_address: 172.20.0.25
networks:
    default:
        ipam:
            config:
                -
                    subnet: 172.20.0.0/24
